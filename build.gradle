//file:noinspection GroovyAccessibility
//file:noinspection GrUnresolvedAccess
plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.10.0'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/peculiarpieces.accesswidener")
}

repositories {
    flatDir {
    	dirs 'libs'
    	content {
    		includeGroup 'libs'
		}
	}
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.willbl.dev/releases" }
    maven { url = "https://maven.siphalor.de" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.bai.lol" }
}

dependencies {
    //Fabric
    minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings ("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    //External
    modImplementation ("vazkii.patchouli:Patchouli:1.20.1-81-FABRIC")
    modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
    //modImplementation ("amymialee:kofi-table:1.0.5+1.19.3")
    modImplementation ("com.terraformersmc:modmenu:7.2.1")
//    modCompileOnly "mcp.mobius.waila:wthit-api:fabric-5.12.0"
//    modRuntimeOnly "mcp.mobius.waila:wthit:fabric-5.12.0"
//    modRuntimeOnly "lol.bai:badpackets:fabric-0.2.0"
    //Include
//    modImplementation include ("de.siphalor:nbtcrafting-1.19:2.2.3+mc1.19")
    modImplementation include ("io.github.ladysnake:PlayerAbilityLib:1.8.0")
    modImplementation include ("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")
    modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2")
    modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:5.2.2")
    include( implementation( annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${project.mixin_extras_version}")))
    modImplementation 'libs:visible-barriers:2.0.8'
}

loom {
    runs {
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${project.archives_base_name}"
            runDir "build/datagen"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "willBlRepositoryReleases"
            url = "https://maven.willbl.dev/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

curseforge {
    apiKey = project.hasProperty('curseforge_api_key') ? project.property('curseforge_api_key') : ''
    project {
        id = project.curseforge_project_id
        changelogType = 'markdown'
        changelog = file("CHANGELOG.md")
        addGameVersion project.minecraft_version
        addGameVersion "Fabric"
        addGameVersion "Quilt"
        mainArtifact(remapJar) {
            displayName = "v${project.version.toString().split("\\+")[0]} for Fabric/Quilt MC $project.minecraft_version"
            releaseType = "release"
            relations {
                requiredDependency "fabric-api"
            }
        }
    }
}

modrinth {
    token = project.hasProperty("modrinth_api_key") ? project.property("modrinth_api_key") : ""
    projectId = project.modrinth_project_id
    versionNumber = project.version
    versionName = "v${project.version.toString().split("\\+")[0]} for Fabric/Quilt MC $project.minecraft_version"
    changelog = file("CHANGELOG.md").text
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ["fabric", "quilt"]
    dependencies {
        // required/optional/incompatible/embedded + project/version
        required.project "fabric-api"
    }
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE.md") {
        rename {"${it}_${project.archives_base_name}.md"}
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}